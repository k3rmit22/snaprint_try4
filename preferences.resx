<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="modal.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAgAAAAIACAYAAAD0eNT6AAAABGdBTUEAALGPC/xhBQAAHDtJREFUeF7t
        3e2ZbEW9h2FCMINtBtsMIAIwAo1ASADEAEQNQDEBxQREDEDRBIAMMIRz6ge2NE3NTK9+W/Wvup/ruj+c
        I3v29O7u9VpV6w1JkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
        kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
        kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkqRFet28+V8/az488tkz/u9MvT97cPx35e8+
        /B75nSRJ0oW9arJDfbfJTvaTJjver5veznpE+V3zO+d3z2vIa8lrymuTJGnZftRkh5id48dNdpZfNr2d
        6YzyWvOa89rzb5B/i/ybSJI0Tdm55VL5b5tqZ/KPdrhykH+rw+0FSZKGL/fBc7k7Z7YrndHf27+a/Jvm
        39ZYA0nS7h0u4zuzf6zDlYLD7QNJku5W7lG/0+TydM5Iezsm9pP3JO9N3iPjCSRJV3W4pJ+zzd5Oh3Hl
        PXPLQJJ0VoezfPfw55L3Mu+pqwOSpP+VuenO8tdyuDpgXQJJWqzDTt+9fPIZyJRDVwYkadKygc+GPqvT
        9XYEkM+GgwFJmiA7fS7lYECSCpaR3xn0ZW4+18pnKJ8lswkkadAOZ/vu63MvxgtI0kBlJbicofU22HAP
        h6sCViGUpAd3ONs3V5+95TPoqoAk3blsZH/ZuLfPaPKZzGfTgYAk3bDM23eZnyryWbXIkCRdUe6xmsJH
        VfnsGicgSRsymp+ZHGYPSJKeKGdLBvYxq382rghI0lHZKP6t6W00YTb5rDsQkLR0dvyszIGApOWy44fv
        OBCQNH2ZGmXHD32ZNWD6oKSpOizg09voAd9nQSFJU5TpT1bug23ynTF1UFLJck8z0556GzfgPKYOSipT
        7mFavQ9uy/gASUPnPj/cV75jkjRMrxuX++Ex8l3Ld06SdisjlT9qehsp4L7y3TNbQNLDy8Ak6/bDvvId
        NEhQ0kPKGYdBfjCWjxtXAyTdrbcbc/phTPlu5jsqSTcrZxZ/aHobHWAs+a66GiDp6jLa2L1+qCXfWTMF
        JF2cef1Qm3UDJG3KU/tgHvkuW0VQ0ot5eA/MxwBBSU9moB/MzwBBSd8rlwct5QtryHfdLQFJ5vbDgtwS
        kBbPKH9Ym1kC0mLlHqDlfIHItsC4AGmBLOwDnLJwkDR5pvgBT8m2IdsISZP1btP70gMcy7ZC0iSZ3w9s
        kW2GpMJlYI8lfYFLZNthcKBUsHxxLe4DXCPbEAcBUqEymtdgP+AWsi0xQ0AqkJX9gFvLNsXKgdLAZQpP
        78sLcAumCUoDZucPPIKDAGmg7PyBR3IQIA2QB/oAe7BgkLRjFvgB9mTBIGmH7PyBETgIkB6YnT8wEgcB
        0gOy8wdG5CBAumN2/sDIHARId8jOH6jAQYB0wz5oel80gBGZIijdIIv8ABVZLEi6Ijt/oDIHAdIF2fkD
        M3AQIG0oj93sfZEAKvIoYemMXjee5w/MJNu0bNskPdGPGjt/YEbZtmUbJ+mkfDH+2fS+OAAzyDbOQYB0
        0l+b3hcGYCbZ1kn6b1b5A1ZitUCplRWzel8QgJlZLVBLZ64/sDJrBGjJTPcDVmd6oJYro2C/aHpfCICV
        ZFtoZoCW6U9N74sAsKJsE6Xp82hfgB/KtlGaNmv8AzzNMwM0ZT9uDPoDeFq2kdlWStNkmV+A81guWFNl
        pT+A81kpUFNksR+A7YwHUOnc9we4jPEAKp37/gCX8+RAlcx8f1b39+Yvza+ekP/9303vz8KB9QFUqqxt
        3fsgw8y+an7XvNVsLX8mfzY/o/ezWZvnBahE1vlnNX9s3mxuVX5Wrhz0/i7W5HkBKpEpf6wiO+lXzb3K
        z/6s6f3drMfUQA2dpX5ZwX+aW57xv1S+V/k7e78LazE1UEOWy1Om/DG7nPXvcSk2VwM+b3q/E+vINtat
        AA2XR/wyu4+bPcuGP79D73djHb9vpGHK5dDeBxVmsffO/zgHATzyFpT0ZDkrMeqfmY208z/056b3u7IG
        swI0RB81vQ8ozCD33Ufc0OZ3+rLp/c6sIdteabcs+MPMMvJ+5LXYff+wQJB2y1r/zKzCEqyuwK0t22Dp
        4Vnrn5nl8nqFcivAGgFr86wAPbRcFu19EGEWP2uq5GB8bR4brIdmzj8zq3L2f8hVALJNlu6eOf/M7tdN
        tbI4TO+1sA5rA+juGfjH7H7SVOudpvdaWIcBgbpruS/a++DBLHIpvWq918NaKo1dUaFyn9HDfphd5Xup
        f216r4l1eFiQ7pKRxqzg/aZq+d17r4m1mBaom2baH6t4q6naL5rea2I9pgXqZrm0yCoqHwDkd++9JtZj
        WqBukml/rKTy/VMHABwzLVBX5+yflVQu0xd7r4k1ZdstXZyzf1ZTuVy96L0m1uUqgC7O2T+rqZxbAJxy
        FUAX5eyfFVVcBfCQAwB6XAXQ5pz9s6LKswAsB0yPqwDalLN/VpW59FWzEBBPcRVAZ/dF0/sQwewqPgnw
        kCcC8hQPCtJZeeAPK/tHUzUH7jzHg4L0YtkA9j48sIqKiwFZrpuXGAugZ3PvH2qeKXkOAOcwFkBPZuQ/
        1LwN4Mod5/CMAHVzCRG+U2k9AFfu2MKTAvWDjCCG7+T7UCVX7tii0mdbD8ga4vBDFe6XOvvnEpWfeqkb
        90HT+5DAyirMnTb1j0tkmy99cyT4ddP7kMDqRt5QftT0fmd4Sbb5rgLIwj/wghFvBfjeci0LA8klRHhB
        zpZeN6OU36X3e8IW2fZr4QwggvOMchCQ38EtO26lwkBX3SlT/+B82fG+3eyVy/7cmimBi2bqH1wmg+8e
        Wb6rBvxxDwYDLpqzCbhcpgg+4vJp/o4vm97vALdgMOCCWTscrvdJc48DgfzMvzW9vxNuqfIjsHVBWee8
        90EALvOvJmdS11xOfdW82+Rn9f4OuJdKz77QlRn8B/eTHfhvmxwQ5Ey+d1CQ/1/+t/w3+W/t9NmTwYCL
        lA2PaUQAHBgMuEgG/wFwymDABfpT03vzAVhX9g2auFzi6b3xAOA2wMS5/A/AU9wGmDiX/wF4itsAk/bj
        pveGA8CB2wAT9oum92YDwIHbABNm6V8AXvLXRhPl8j8A58o+Q5Pk8j8A58o+Q5OUSzq9NxkATrkNMEkW
        /wFgK7MBJuidpvfmAsBTsu9Q8Tz6F4CtPCJ4gr5oem8uADwl+w4V7idN740Fnvef5u8nev8dzCz7EBXN
        9D942VfNH5v3mrea58rAqJ82v2v+3fR+HszCdMDCmf4Hfdl5Z4f/urmmV00OBnIQ0ft7oDLTAYtm+h98
        X3bS2Vlfu9N/qp83DgSYjemABTP9D76Vs/3snB9RNpa/aXq/B1RkOmDBft303kxYxWfNm80e5SqDqwHM
        IPsSFcvT/1jVnjv+43I14POm9ztCFdmXqFi9NxJmljPut5uRchDADFSoTGXqvYkwo8zZ/7AZNQcBVPfS
        9FgN1PtN702E2fylyVS80ctBQA5Ueq8BRpd9iopk/j+zy850hPv8W8rAwN5rgdFZD6BQXze9NxFmkLP+
        nFFX7KOm95pgZNmnqEDW/2dWOesfbZDf1twKoCrPBSiQ9f+ZUab2VT3rP+2DpvcaYWSeC1CgPMO59+ZB
        VSOP8L8kVwGoKPsWDV6e4dx786CaigP9zs2BOtVYEKhAvTcOqsm8+QrT+y7NszqoSANnASBmUHmU/5bc
        BqAaCwIN3M+a3psGVeRJeqtkvQ6qyT5Gg+YJgFS22sbFip1U48mAA+eMgopmmN9/ScYBUI0VAQfOCoBU
        k51/lshdMWN2qMaKgIP246b3hsGoVt75pwx07P27wMhWGKBbLmcTVLL6zv9Q798GRmYmwIAZUEQV1+z8
        c/aRwYJZHfDd//7flev9+8DIPBp4wKwsRgWX7vyzo/+4Of15uSdZ+UrC6euB0VkSeMDMAGB02flnrMrW
        cqb/3ADX/G+X/Ny9M26HiswEGDDPAGBkl5z556z/k6b3805VnJ9s3A4VZV+jweq9UTCCS3f+/2x6P6+n
        4kbJOgBUpYFyKZGRbd3557+/ZE2Lahm4S1UVb7lNm0uJjGrr8r6X7vxzlaFaf2p6rwVGZyrgQP2i6b1J
        sKcM3ttSziou2flHdqbVuvS1wt48FGigXEpkNJmyt6Wt9/xPVdsguf9PZdYCGCiXEhnJ583Wrv0MV1sQ
        yJM7qcxaAANlDQBG8WWzdWf8UdP7WefKlYNqmbZLZdYCGCj3EhnF1hH/uXTf+zlbZAxMpX7S9F4HVGEt
        gIHqvUHwaJeM+O/9nK2yQ62UMTvMQIPUe3PgkbYO+rtmxP+x3HKo1j+a3muBSjRALieytwz623Lf/9oR
        /8eqLQFs0S5mYTGgAbIIEHvbet//lrNWMp2uUrcY8wAjsBjQADkAYE9bF/u5dsT/Mav/wX4cAAyQMwr2
        8mmzpVt/VivORe69Dqio2tW3KTOimD1sfbb/rUb8H9s662DvrP7HTKwGOEAOANjDloVAbjXi/1S11f9y
        xaL3OqAiBwAD5ACAPZx7AHDLEf/HKq5EZsEuZuIAYIAsA8wezt0B/6Hp/flrWf0P9lXxIHy6HACwh3O+
        /B80vT97C9XmIHv4D7NxADBADgDYw0tf/nvOTrH6H+zPAcAAOQBgD899+TPi/573u63+B/tzADBADgDY
        Qxa06ZVBf/ce7FZtAZKMV+i9DqjMAcAAOQBgD70RwPca8X/M6n8wBgcAA+QAgD30DgDuNeL/WLXV/3JQ
        1HsdUJ0DgAHqvTFwb6cHAPcc8X+s2vKjVv9jVrnVp53rvTFwb8dH/498HoXV/2Ac2rnemwL3djgAuPeI
        /2NPDTwcOav/MTPtXO9NgXvLAcAjRvwfq7b6n0d1MzvtXO9NgXvLwjb3HvF/yup/MBbtXO9NgdnkYKNa
        XzS91wKz0M713hSYjdX/YDzaud6bArPJ0/QqZfU/VqCd670pMJOKq/9ZoIsVaOd6bwrMxOp/MJ6KB+bT
        5UyD2VVb/e+RCyPBXo4XA9NOOQBgdlb/g/E4ABggBwDMzOp/MCYHAAPkAICZ5XJ6pTz8h1U4ABggBwDM
        zOp/MCYHAAPkAIBZWf0PxuUAYIAcADCr95tKZbGi3uuAGTkAGKBsJHtvDlRn9T8YV7UD9ClzAMCMvmyq
        lSck9l4LzMgBwAA5AGBGVv+DsTkAGCCrjjEjq//B2Kp9R6fsrab35kBl1cqCRb3XAbPKvkc75wCA2VRc
        /a/3OmBmDgAGyNQjZmP1PxhftUW6pq335kBV1TYsHv7DijRIvTcHKrL6H9SgQfpP03uDoJosplMpt+BY
        UfY5GiTLATOLaqv/WYeDFVkGeKBMQWIGVv+DGqot1DV1zkKYQR6lW6kMVuy9DpidVQAHykNImIHV/6CG
        alN1p85iQFRXcVCRW2+syiJAA+VSJNVVW/3Pw39YmUWABqv3JkEVVv+DOjRYGUHde6OggpxRV8rqf6yq
        4myd6bMWAFVVXP3v66b3WmB21gAYMGckVGX1P6jDGgADZi0Aqqq2+l/WK+i9DliBNQAGzFRAKrL6H9Ri
        CuCAmZZERVb/g1qqDdhdJk8FpJpqZxNW3WRlngI4cGYCUEnFjYnvGCszA2DgDE6ikmqjid1mY3XVbtkt
        lYeTUEm11f98v1idhwANnJkAVGL1P6jFDIDB671pMJqK9xKt/sfqNHhZVrX3xsFIqq3+5+oaq6u4ZPdy
        uUxJBdUeJ2qALauzBHCBzFNmdBVX//ui6b0WWEW1q3ZL5kEljM7qf1BPtWd2LJsVARmZ1f+gFisAFspq
        ZYyq4obEw39YnRUAC+XRwIzK6n9Qj0cAF8qUJUb1TlMpq/+BBYDK1XsTYW/VVv/7U9N7HbASFcuCQIwm
        O9NqWf2P1bn/XzALlzCaavOIc7ui9zpgJZ4AWDAbL0Zj9T+op9q4HbWMXmYkFdcRt/ofqGzWA2AU1S4j
        WlET3P8vnRXMGEW1ZUR9d8D6/6VzFsMIrP4HNVn/v3h58lrvjYVHqbb6n4f/QM2nduqkbHx7by48itX/
        oJ5qB+7qZDoge7P6H9Rj+t8EmQ7Iniqu/td7HbCaagfueiLTAdlLLqdXyhUzMP1vqkxpYi/VVv979JiZ
        jzv/P9ib6X8TZVQze7D63/M+b3KZ1UwdRlPtwF0v5OmAPNr7TaUeuW5G1kY43GN1i46RfNpostwG4NGq
        LSLyqIf/ZOf/ujnkAICRVBu3ozMyG4BHqriIyKNW/zvdwDoAYCRG/0+a+c08itX/+j5oTrPsMKOoOG1X
        Z2aFMx6l2iIij7hFlhH/vXr/LezB5f+JcxuAR6nWva+OHUb89+r997AHl/8nz20A7q3aZcR7Hxgfj/jv
        1fsz8Ggu/y+Q2wDcW7XLiPde/e94xH+v3p+BR3P5f4FyJpIzkt4HAG7B6n/feWmj+lbT+3PwSC9dpdJE
        eUQw91Jx9b+vm95rudZHzUs5AGAEHv27UI9c8Yy1VFtD/F7fhT835+QAgBFUW7RLV2ZpYO7B6n/Pj/g/
        zQEAe6t41U5XZjAgt1Zx9b9bP/wn91K3jIHwPWRvBv8tmMGA3FrOpit1j9X/Xhrxf1y+g/cafwDnMPhv
        4QwG5JZWX/1v65mUZwCwN4P/Fu7NpvehgK1yJlGtW+6Azxnxf9y7Te/nwCMZ/Ld4uW/b+2DAFiuv/nfu
        iP9DufXg0j97qzhmRzfOICRuodpAolt97reM+D/k0j8jMPhPBgNyE9UGEt1i/MvWEf8pjwPu/Sx4JIP/
        9L9slLjGqqv/bRnxn/Lf934OPFq2+dI33fJ+KOuptvrfLR7+s/Xyab5jFt9iFM7+9b1MCeRSq63+t3XE
        f/pD0/tZ8Gim/ukH3WNRFOa32up/W0f8JwNtGcnWcStapEzl6n1g4CnVVv+75uE/l4z4z31/U/4YRbXp
        unpgFgZiqzzMplKXrv53yc4/ue/PSLKNl57MBostqvV+03sdz7l05+++PyP5tJGezf1KzpUFbaq19fP9
        cXNJvkeMZuvMFS1aznh6HyA4lrPpauVMvvdaTmWhlPeaSzLfn9E4+9fZGQvAOarN/z/00oN4Pmu2LvJz
        KAcYBv0xGvf+takcMfY+SHBQbQDgcb9pTl/PV83Pm0vLzt8YGkbj7F+bcxWAl1Q+AEivml81udR/6Rn/
        cQb9MSJn/7ooVwF4TvUDgFuW1QF7/0awJ2f/ujhXAXiOA4BvM+KfUTn711W5CsBTHADY+TMuZ/+6OlcB
        eEqeqrdypvsxMmf/ukmuAtBTcR2AW2WNf0Z2yUOrpG6eFEhPxZUAb5GdP6PzxD/dtA+a3geNta2WnT+j
        y7ZaumlZ5CTLo/Y+cKxrpXEAdv6MLtvoSx5cJb2YEc+cWuX54vns2/kzOg/80V3zoCBOzX6/8aVnB8AI
        sm2W7pppgZz6fTNrlvelCtP+9JAyxaT3AWRds218ch/1b03vtcJoTPvTwzItkFN5Ct4sg49yMON+P1Vk
        4J9pf3popgVyKpfLq/fLpvfaYFSm/WmXDAjkVNVRyJni51n+VGPgn3YrG83eh5K1VTsIcNZPVdkGS7vl
        Oej0ZKc6ejlQ+bLp/f4wumx7pV3LwC8bUXo+aUYcGJhBfkb4U1m2uVb80xBZG4CnZEP1djNCWbbYjp8Z
        mPOvocpiML0PKkSuBrxqHl3OkrKSn6tUzGLmhbdUtGxoPSyIl3zc3HvgUj6Lub+fg47e7wBVediPhi2X
        ensfWjj1ryY76VtdFcgl0Zzp2+kzs1Fup0ndcobX++DCU3Iw8GGTnfhLZze5enDY2efPfNb0fibMJttW
        aeiyAXe/lWvk85Md+0Hvv4GVGPWvMlkgCOB2LPijUnlWAMD1rPWvkn3a9D7QALws21CpZHlEpamBANt5
        zK/Kl6levQ83AE8z5U9TZGogwPlM+dM0ZfpKnlvd+6AD8J1sK03501QZDwDwPPf9NW2WCgZ4mvv+mjrr
        AwD8kPn+WqI/N70vAMCKsk2UlsjzAgC+ZZ1/LVfWtjYoEFhZtoHW+deSWSQIWFm2gdKy5bnuvS8GwMyy
        7ZOWz0qBwEqs9Ccd5cmBwAo84U86yXLBwOws8ys9Ub4YZgYAM8q2zc5feibTA4HZmO4nnZlnBgAzsca/
        tCFrBAAzMNdfuiAHAUBldv7SFTkIACqy85dukEcIA5VY5U+6YVYLBCqwyp90hxwEACOz85fumIMAYER2
        /tIDchAAjMTOX3pgDgKAEdj5SzvkIADYk52/tGMfNr0vJsA9vddI2jmLBQGPZJEfaaAcBACPYOcvDZiD
        AOCe7PylgctjN/Ps7d6XF+AS2aZ4pK9UoNeNgwDgFrItyTZFUpF+1Hze9L7QAOfINiTbEknFyhf3s6b3
        xQZ4TrYddv5S8SwYBGxhgR9porJoR++LDnDMAj/ShGUKj8GBQE+2Dab5SROX0bxfNb0NALCmbBOM9JcW
        KAN7/tL0NgTAWrItMNhPWiwPEoK1ZRsgadGsHAjryXfeyn6S3njVWDQI1pDver7zkvRNuQdovQCYW77j
        7vdL6uaWAMzHJX9JZ5XLg5YQhjnku+ySv6RNmSUAtRnlL+niLBwE9VjYR9JNMkAQ6jDQT9LNM0AQxmWg
        n6S7ljOLPza9DRCwj3wnnfVLekhvNsYGwL7yHcx3UZIeWs44ftP0NkzAfeW756xf0q5ltLGlhOEx8l0z
        wl/SUFk3AO4ng/zM65c0bFlxLM8X723AgMvkO2U1P0klysAktwXgOvkOGeQnqWQ/b6wdANvkO5PvjiSV
        LiOVjQ+A8+S7YnS/pKkyPgCe5j6/pOnLPU2PG4Zv5bvgPr+kpXIgwMrs+CUtnwMBVmLHL0knZaNo6iCz
        suOXpBfK9Kd/N72NKFSTHb8pfZK0oZwtmTVAVfnsOuOXpCvK1Kg877y3kYXR5LNqOp8k3bDDgkJWFmQ0
        hwf1WMBHku5YNrK5p/pV09sYw6PkM5jPoh2/JD243GPNJVdXBXiUfNbymXN/X5IG6HBVwOwB7iWfLWf7
        kjRwrxtXBbiFw9l+PlOSpCLlTO2XjQMBtspnJp8dZ/uSVLyfNq4K8JzD2X4+K5KkCTscDPR2AqzFTl+S
        FuwwcDArtv296e0gmE/e67znBvRJkr4pO4PD1QFrDMwj7+XhLN8OX5L0Yhn5/V7j6kA9ec/y3hm9L0m6
        qsPVgd811hoYT96TvDfu5UuS7t5bza+anG2aXfA4+bfOv3n+7fMeSJK0a4dbBrnf7CrB7eTfMv+mLulL
        ksqUM9SMNs/laVcKnnc4s8+/Vf7NnN1LkqYq4wkOtw9yZpud3kqzDvJa85rz2g+X8Y3OlyQt3avmcNXg
        +ACh0pWDw5n8YQd/OJvPa5MkSRd2OEiIjHrPTvYgO96n9HbWPb0/e3D8d+XvPvwedu6SJEmSJEmSJEmS
        JEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmS
        JEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmS
        JEmSJEmSJEmSJEmSJGmB3njj/wGaRbHRwCrMcwAAAABJRU5ErkJggg==
</value>
  </data>
</root>